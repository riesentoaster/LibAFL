[config]
# make sure the commands are not executed in the sub-workspaces
default_to_workspace = false

[env]
CARGO_TARGET_DIR = "target"
PROFILE = "release"
PROFILE_DIR = "release"
COREUTILS_VERSION = "9.5"

[tasks.create_target_dir]
script_runner = "@shell"
condition = { files_not_exist = ["./${CARGO_TARGET_DIR}"] }
script = '''
mkdir -p "${CARGO_TARGET_DIR}"
'''

[tasks.coverage_collector]
condition = { files_not_exist = ["./${CARGO_TARGET_DIR}/coverage.o"] }
dependencies = ["create_target_dir"]
script_runner = "@shell"
script = '''
clang -c -o "./${CARGO_TARGET_DIR}/coverage.o" coverage.c
'''


[tasks.coreutils_src]
script_runner = "@shell"
condition = { files_not_exist = ["./${CARGO_TARGET_DIR}/GNU_coreutils"] }
dependencies = ["create_target_dir"]
script = '''
cd "./${CARGO_TARGET_DIR}"
wget "http://ftp.gnu.org/gnu/coreutils/coreutils-${COREUTILS_VERSION}.tar.gz"
tar -xzf "coreutils-${COREUTILS_VERSION}.tar.gz"
rm "coreutils-${COREUTILS_VERSION}.tar.gz"
mv -f "coreutils-${COREUTILS_VERSION}" GNU_coreutils
'''

[tasks.coreutils_bin]
condition = { files_not_exist = [
    "./${CARGO_TARGET_DIR}/GNU_coreutils/Makefile",
] }
dependencies = ["coreutils_src", "coverage_collector", "create_target_dir"]
script_runner = "@shell"
script = '''
cd "./${CARGO_TARGET_DIR}"

# absolute path because build system traverses into subdirectories
COVERAGE_FILE=$(realpath "./coverage.o")

cd ./GNU_coreutils

export CC="clang"
export CFLAGS="-g -O2 -fsanitize-coverage=trace-pc-guard"
export LDFLAGS="-rdynamic ${COVERAGE_FILE}"

./configure CFLAGS="$CFLAGS" LDFLAGS="$LDFLAGS"
make 
'''

[tasks.get_guard_num]
script_runner = "@shell"
script = '''
cargo build --profile ${PROFILE} --package get_guard_num
'''

[tasks.setup_guard_redirection]
script_runner = "@shell"
script = '''
cargo build --profile ${PROFILE} --package setup_guard_redirection
'''

[tasks.preloads]
dependencies = ["get_guard_num", "setup_guard_redirection"]

[tasks.fuzzer]
dependencies = ["coreutils_bin", "preloads"]
script_runner = "@shell"
script = '''
cargo build --profile ${PROFILE}
'''

[tasks.run]
dependencies = ["fuzzer"]
script_runner = "@shell"
script = '''
./target/release/coreutils
'''
